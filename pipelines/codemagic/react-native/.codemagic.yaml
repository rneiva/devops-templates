workflows:
  android:
    name: <Project Android>
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - keystore_credentials
        - google_play
        - react_variables
      vars:
        PACKAGE_NAME: "<PACKAGE_NAME>"
      node: v16.15.0
    cache:
      cache_paths:
        - "$CM_BUILD_DIR/node_modules"
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm install --legacy-peer-deps
      - name: Set Android SDK location
        script: echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Set up keystore file for code signing
        script: |
          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
          cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_PASSWORD
          keyAlias=$CM_KEY_ALIAS
          storeFile=$CM_KEYSTORE_PATH
          EOF
      - name: Build Android release
        script: |
          export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=internal) + 1))
          export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
          cd android && chmod +x gradlew && ./gradlew bundleRelease
    artifacts:
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - <email>
        notify:
          success: true
          failure: false
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal

  ios:
    name: <Project iOS>
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - appstore_credentials
        - react_variables
      vars:
        XCODE_WORKSPACE: "<XCODE>.xcworkspace"
        XCODE_SCHEME: "<XCODE_SCHEME>"
        BUNDLE_ID: "<BUNDLE_ID>"
        APP_STORE_APP_ID: <ID>
      node: v16.15.0
      xcode: 13.3
      cocoapods: default
    cache:
      cache_paths:
        - "$HOME/Library/Caches/CocoaPods"
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
      - name: Install npm dependencies
        script: |
          npm install --legacy-peer-deps
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios
          agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      - name: Create a changelog
        script: |
          if [[ -z ${CM_PREVIOUS_COMMIT} ]]
          then
            No finished builds found to generate changelog" | tee release_notes.txt
          else
            $(git-changelog generate --previous-commit $CM_PREVIOUS_COMMIT)" | tee release_notes.txt
          fi
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - <email>
        notify:
          success: true
          failure: false
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - <group_tests>